///
/// JHybridPoopySpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#include "JHybridPoopySpec.hpp"





namespace margelo::nitro::TurboScrypt {

  jni::local_ref<JHybridPoopySpec::jhybriddata> JHybridPoopySpec::initHybrid(jni::alias_ref<jhybridobject> jThis) {
    return makeCxxInstance(jThis);
  }

  void JHybridPoopySpec::registerNatives() {
    registerHybrid({
      makeNativeMethod("initHybrid", JHybridPoopySpec::initHybrid),
    });
  }

  size_t JHybridPoopySpec::getExternalMemorySize() noexcept {
    static const auto method = _javaPart->getClass()->getMethod<jlong()>("getMemorySize");
    return method(_javaPart);
  }

  // Properties
  double JHybridPoopySpec::getPi() {
    static const auto method = _javaPart->getClass()->getMethod<double()>("getPi");
    auto __result = method(_javaPart);
    return __result;
  }

  // Methods
  double JHybridPoopySpec::add(double a, double b) {
    static const auto method = _javaPart->getClass()->getMethod<double(double /* a */, double /* b */)>("add");
    auto __result = method(_javaPart, a, b);
    return __result;
  }

} // namespace margelo::nitro::TurboScrypt
